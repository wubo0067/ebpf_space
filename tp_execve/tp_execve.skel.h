/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED! */
#ifndef __TP_EXECVE_KERN_SKEL_H__
#define __TP_EXECVE_KERN_SKEL_H__

#include <stdlib.h>
#include <bpf/libbpf.h>

struct tp_execve_kern {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_program *tracepoint__syscalls__sys_enter_execve;
	} progs;
	struct {
		struct bpf_link *tracepoint__syscalls__sys_enter_execve;
	} links;
};

static void
tp_execve_kern__destroy(struct tp_execve_kern *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
tp_execve_kern__create_skeleton(struct tp_execve_kern *obj);

static inline struct tp_execve_kern *
tp_execve_kern__open_opts(const struct bpf_object_open_opts *opts)
{
	struct tp_execve_kern *obj;

	obj = (struct tp_execve_kern *)calloc(1, sizeof(*obj));
	if (!obj)
		return NULL;
	if (tp_execve_kern__create_skeleton(obj))
		goto err;
	if (bpf_object__open_skeleton(obj->skeleton, opts))
		goto err;

	return obj;
err:
	tp_execve_kern__destroy(obj);
	return NULL;
}

static inline struct tp_execve_kern *
tp_execve_kern__open(void)
{
	return tp_execve_kern__open_opts(NULL);
}

static inline int
tp_execve_kern__load(struct tp_execve_kern *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct tp_execve_kern *
tp_execve_kern__open_and_load(void)
{
	struct tp_execve_kern *obj;

	obj = tp_execve_kern__open();
	if (!obj)
		return NULL;
	if (tp_execve_kern__load(obj)) {
		tp_execve_kern__destroy(obj);
		return NULL;
	}
	return obj;
}

static inline int
tp_execve_kern__attach(struct tp_execve_kern *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
tp_execve_kern__detach(struct tp_execve_kern *obj)
{
	return bpf_object__detach_skeleton(obj->skeleton);
}

static inline int
tp_execve_kern__create_skeleton(struct tp_execve_kern *obj)
{
	struct bpf_object_skeleton *s;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)
		return -1;
	obj->skeleton = s;

	s->sz = sizeof(*s);
	s->name = "tp_execve_kern";
	s->obj = &obj->obj;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs)
		goto err;

	s->progs[0].name = "tracepoint__syscalls__sys_enter_execve";
	s->progs[0].prog = &obj->progs.tracepoint__syscalls__sys_enter_execve;
	s->progs[0].link = &obj->links.tracepoint__syscalls__sys_enter_execve;

	s->data_sz = 3976;
	s->data = (void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xc8\x0a\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x13\0\
\x01\0\xb7\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\x47\x50\x4c\0\x09\x0c\x05\0\x01\x11\
\x01\x25\x0e\x13\x05\x03\x0e\x10\x17\x1b\x0e\x11\x01\x12\x06\0\0\x02\x34\0\x03\
\x0e\x49\x13\x3f\x19\x3a\x0b\x3b\x0b\x02\x18\0\0\x03\x01\x01\x49\x13\0\0\x04\
\x21\0\x49\x13\x37\x0b\0\0\x05\x24\0\x03\x0e\x3e\x0b\x0b\x0b\0\0\x06\x24\0\x03\
\x0e\x0b\x0b\x3e\x0b\0\0\x07\x16\0\x49\x13\x03\x0e\x3a\x0b\x3b\x0b\0\0\x08\x2e\
\x01\x11\x01\x12\x06\x40\x18\x97\x42\x19\x03\x0e\x3a\x0b\x3b\x0b\x27\x19\x49\
\x13\x3f\x19\0\0\x09\x05\0\x03\x0e\x3a\x0b\x3b\x0b\x49\x13\0\0\x0a\x0f\0\x49\
\x13\0\0\x0b\x13\0\x03\x0e\x3c\x19\0\0\0\xbe\0\0\0\x04\0\0\0\0\0\x08\x01\0\0\0\
\0\x0c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\x02\0\0\0\0\x3f\0\0\
\0\x01\x17\x09\x03\0\0\0\0\0\0\0\0\x03\x4b\0\0\0\x04\x52\0\0\0\x04\0\x05\0\0\0\
\0\x06\x01\x06\0\0\0\0\x08\x07\x02\0\0\0\0\x6e\0\0\0\x01\x18\x09\x03\0\0\0\0\0\
\0\0\0\x07\x79\0\0\0\0\0\0\0\x02\x1b\x05\0\0\0\0\x07\x04\x08\0\0\0\0\0\0\0\0\
\x10\0\0\0\x01\x5a\0\0\0\0\x01\x15\xa5\0\0\0\x09\0\0\0\0\x01\x15\xb7\0\0\0\0\
\x07\xb0\0\0\0\0\0\0\0\x02\x1a\x05\0\0\0\0\x05\x04\x0a\xbc\0\0\0\x0b\0\0\0\0\0\
\x63\x6c\x61\x6e\x67\x20\x76\x65\x72\x73\x69\x6f\x6e\x20\x31\x31\x2e\x30\x2e\
\x30\x20\x28\x52\x65\x64\x20\x48\x61\x74\x20\x31\x31\x2e\x30\x2e\x30\x2d\x31\
\x2e\x6d\x6f\x64\x75\x6c\x65\x5f\x65\x6c\x38\x2e\x34\x2e\x30\x2b\x35\x38\x37\
\x2b\x35\x31\x38\x37\x63\x61\x63\x30\x29\0\x74\x70\x5f\x65\x78\x65\x63\x76\x65\
\x2e\x6b\x65\x72\x6e\x2e\x63\0\x2f\x64\x61\x74\x61\x2f\x63\x61\x6c\x6d\x2f\x70\
\x72\x6f\x67\x72\x61\x6d\x2f\x65\x62\x70\x66\x2d\x73\x70\x61\x63\x65\x2f\x74\
\x70\x5f\x65\x78\x65\x63\x76\x65\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x63\x68\
\x61\x72\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\
\x5f\x5f\0\x5f\x76\x65\x72\x73\x69\x6f\x6e\0\x75\x6e\x73\x69\x67\x6e\x65\x64\
\x20\x69\x6e\x74\0\x5f\x5f\x75\x33\x32\0\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\
\x74\x5f\x5f\x73\x79\x73\x63\x61\x6c\x6c\x73\x5f\x5f\x73\x79\x73\x5f\x65\x6e\
\x74\x65\x72\x5f\x65\x78\x65\x63\x76\x65\0\x69\x6e\x74\0\x5f\x5f\x73\x33\x32\0\
\x63\x74\x78\0\x74\x72\x61\x63\x65\x5f\x65\x76\x65\x6e\x74\x5f\x72\x61\x77\x5f\
\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\xf8\0\0\
\0\xf8\0\0\0\x60\x01\0\0\0\0\0\0\0\0\0\x02\x02\0\0\0\x01\0\0\0\0\0\0\x07\0\0\0\
\0\0\0\0\0\x01\0\0\x0d\x04\0\0\0\x1b\0\0\0\x01\0\0\0\x1f\0\0\0\0\0\0\x08\x05\0\
\0\0\x25\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\x29\0\0\0\x01\0\0\x0c\x03\0\0\0\
\x12\x01\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x07\0\0\
\0\x09\0\0\0\x04\0\0\0\x17\x01\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\x2b\x01\0\0\0\
\0\0\x0e\x08\0\0\0\x01\0\0\0\x34\x01\0\0\0\0\0\x08\x0c\0\0\0\x3a\x01\0\0\0\0\0\
\x01\x04\0\0\0\x20\0\0\0\x47\x01\0\0\0\0\0\x0e\x0b\0\0\0\x01\0\0\0\x50\x01\0\0\
\x01\0\0\x0f\0\0\0\0\x0a\0\0\0\0\0\0\0\x04\0\0\0\x58\x01\0\0\x01\0\0\x0f\0\0\0\
\0\x0d\0\0\0\0\0\0\0\x04\0\0\0\0\x74\x72\x61\x63\x65\x5f\x65\x76\x65\x6e\x74\
\x5f\x72\x61\x77\x5f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\0\x63\x74\x78\0\x5f\
\x5f\x73\x33\x32\0\x69\x6e\x74\0\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x5f\
\x5f\x73\x79\x73\x63\x61\x6c\x6c\x73\x5f\x5f\x73\x79\x73\x5f\x65\x6e\x74\x65\
\x72\x5f\x65\x78\x65\x63\x76\x65\0\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x2f\
\x73\x79\x73\x63\x61\x6c\x6c\x73\x2f\x73\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\
\x65\x78\x65\x63\x76\x65\0\x2f\x64\x61\x74\x61\x2f\x63\x61\x6c\x6d\x2f\x70\x72\
\x6f\x67\x72\x61\x6d\x2f\x65\x62\x70\x66\x2d\x73\x70\x61\x63\x65\x2f\x74\x70\
\x5f\x65\x78\x65\x63\x76\x65\x2f\x74\x70\x5f\x65\x78\x65\x63\x76\x65\x2e\x6b\
\x65\x72\x6e\x2e\x63\0\x5f\x5f\x73\x33\x32\x20\x74\x72\x61\x63\x65\x70\x6f\x69\
\x6e\x74\x5f\x5f\x73\x79\x73\x63\x61\x6c\x6c\x73\x5f\x5f\x73\x79\x73\x5f\x65\
\x6e\x74\x65\x72\x5f\x65\x78\x65\x63\x76\x65\x28\x20\x73\x74\x72\x75\x63\x74\
\x20\x74\x72\x61\x63\x65\x5f\x65\x76\x65\x6e\x74\x5f\x72\x61\x77\x5f\x73\x79\
\x73\x5f\x65\x6e\x74\x65\x72\x2a\x20\x63\x74\x78\x20\x29\x20\x7b\x20\x72\x65\
\x74\x75\x72\x6e\x20\x30\x3b\x20\x7d\0\x63\x68\x61\x72\0\x5f\x5f\x41\x52\x52\
\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x5f\x6c\x69\x63\x65\
\x6e\x73\x65\0\x5f\x5f\x75\x33\x32\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\
\x6e\x74\0\x5f\x76\x65\x72\x73\x69\x6f\x6e\0\x6c\x69\x63\x65\x6e\x73\x65\0\x76\
\x65\x72\x73\x69\x6f\x6e\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x14\0\0\0\x14\0\0\0\
\x1c\0\0\0\x30\0\0\0\0\0\0\0\x08\0\0\0\x50\0\0\0\x01\0\0\0\0\0\0\0\x06\0\0\0\
\x10\0\0\0\x50\0\0\0\x01\0\0\0\0\0\0\0\x75\0\0\0\xae\0\0\0\x59\x54\0\0\0\0\0\0\
\0\x10\0\0\0\0\0\0\0\x01\x7a\x52\0\x08\x7c\x0b\x01\x0c\0\0\0\x18\0\0\0\x18\0\0\
\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\x82\0\0\0\x04\0\x65\0\0\0\x08\x01\
\x01\xfb\x0e\x0d\0\x01\x01\x01\x01\0\0\0\x01\0\0\x01\x2f\x75\x73\x72\x2f\x73\
\x72\x63\x2f\x6c\x69\x6e\x75\x78\x2d\x35\x2e\x31\x32\x2e\x39\x2f\x69\x6e\x63\
\x6c\x75\x64\x65\x2f\x75\x61\x70\x69\x2f\x61\x73\x6d\x2d\x67\x65\x6e\x65\x72\
\x69\x63\0\0\x74\x70\x5f\x65\x78\x65\x63\x76\x65\x2e\x6b\x65\x72\x6e\x2e\x63\0\
\0\0\0\x69\x6e\x74\x2d\x6c\x6c\x36\x34\x2e\x68\0\x01\0\0\0\0\x09\x02\0\0\0\0\0\
\0\0\0\x03\x14\x01\x05\x59\x0a\x01\x02\x02\0\x01\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\xb9\0\0\0\x04\0\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x09\0\x44\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x09\0\x55\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x09\0\x7d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x09\0\x86\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x09\0\x8b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x09\0\x9f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x09\0\xb5\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x09\0\xa8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x09\0\xbb\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x09\0\xec\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x09\0\xe6\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x09\0\xe2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x09\0\xf0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x03\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x10\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x92\0\0\0\x11\0\x04\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\
\0\0\0\x3d\0\0\0\x11\0\x05\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\x46\0\0\0\x12\0\
\x03\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x06\0\0\0\0\0\0\0\x0a\0\0\0\x11\0\0\0\
\x0c\0\0\0\0\0\0\0\x0a\0\0\0\x02\0\0\0\x12\0\0\0\0\0\0\0\x0a\0\0\0\x03\0\0\0\
\x16\0\0\0\0\0\0\0\x0a\0\0\0\x12\0\0\0\x1a\0\0\0\0\0\0\0\x0a\0\0\0\x04\0\0\0\
\x1e\0\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\x2b\0\0\0\0\0\0\0\x0a\0\0\0\x05\0\0\0\
\x37\0\0\0\0\0\0\0\x01\0\0\0\x13\0\0\0\x4c\0\0\0\0\0\0\0\x0a\0\0\0\x06\0\0\0\
\x53\0\0\0\0\0\0\0\x0a\0\0\0\x07\0\0\0\x5a\0\0\0\0\0\0\0\x0a\0\0\0\x08\0\0\0\
\x66\0\0\0\0\0\0\0\x01\0\0\0\x14\0\0\0\x73\0\0\0\0\0\0\0\x0a\0\0\0\x09\0\0\0\
\x7a\0\0\0\0\0\0\0\x0a\0\0\0\x0a\0\0\0\x81\0\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\
\x8f\0\0\0\0\0\0\0\x0a\0\0\0\x0b\0\0\0\x9a\0\0\0\0\0\0\0\x0a\0\0\0\x0c\0\0\0\
\xaa\0\0\0\0\0\0\0\x0a\0\0\0\x0d\0\0\0\xb1\0\0\0\0\0\0\0\x0a\0\0\0\x0e\0\0\0\
\xbd\0\0\0\0\0\0\0\x0a\0\0\0\x0f\0\0\0\xf0\0\0\0\0\0\0\0\0\0\0\0\x13\0\0\0\x08\
\x01\0\0\0\0\0\0\0\0\0\0\x14\0\0\0\x2c\0\0\0\0\0\0\0\0\0\0\0\x10\0\0\0\x40\0\0\
\0\0\0\0\0\0\0\0\0\x10\0\0\0\x1c\0\0\0\0\0\0\0\x01\0\0\0\x10\0\0\0\x72\0\0\0\0\
\0\0\0\x01\0\0\0\x10\0\0\0\0\x2e\x64\x65\x62\x75\x67\x5f\x61\x62\x62\x72\x65\
\x76\0\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\x74\0\
\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\
\x67\x5f\x69\x6e\x66\x6f\0\x5f\x76\x65\x72\x73\x69\x6f\x6e\0\x74\x72\x61\x63\
\x65\x70\x6f\x69\x6e\x74\x5f\x5f\x73\x79\x73\x63\x61\x6c\x6c\x73\x5f\x5f\x73\
\x79\x73\x5f\x65\x6e\x74\x65\x72\x5f\x65\x78\x65\x63\x76\x65\0\x74\x72\x61\x63\
\x65\x70\x6f\x69\x6e\x74\x2f\x73\x79\x73\x63\x61\x6c\x6c\x73\x2f\x73\x79\x73\
\x5f\x65\x6e\x74\x65\x72\x5f\x65\x78\x65\x63\x76\x65\0\x5f\x6c\x69\x63\x65\x6e\
\x73\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\x6e\x65\0\x2e\
\x72\x65\x6c\x2e\x65\x68\x5f\x66\x72\x61\x6d\x65\0\x74\x70\x5f\x65\x78\x65\x63\
\x76\x65\x2e\x6b\x65\x72\x6e\x2e\x63\0\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\
\x79\x6d\x74\x61\x62\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xca\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\xe0\x09\0\0\0\0\0\0\xe3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x6d\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\
\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x93\0\0\0\
\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x50\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x3e\0\0\0\x01\0\0\0\x03\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x54\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x58\0\0\0\0\0\0\0\x8f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x31\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe7\0\0\
\0\0\0\0\0\xc2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x2d\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\x08\0\0\0\0\0\0\x40\
\x01\0\0\0\0\0\0\x12\0\0\0\x07\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x22\0\
\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa9\x01\0\0\0\0\0\0\x0a\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\xde\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb3\x02\0\0\0\0\0\0\x70\x02\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xda\0\0\0\x09\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x80\x09\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x12\0\0\0\x0a\0\0\
\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x23\x05\0\0\0\0\0\0\x50\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x15\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa0\
\x09\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x12\0\0\0\x0c\0\0\0\x08\0\0\0\0\0\0\0\x10\0\
\0\0\0\0\0\0\xaf\0\0\0\x01\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x78\x05\0\0\
\0\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\xab\0\0\0\x09\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc0\x09\0\0\0\0\0\0\x10\0\
\0\0\0\0\0\0\x12\0\0\0\x0e\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x9f\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa8\x05\0\0\0\0\0\0\x86\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9b\0\0\0\x09\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\xd0\x09\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x12\0\0\0\x10\
\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xd2\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x30\x06\0\0\0\0\0\0\x10\x02\0\0\0\0\0\0\x01\0\0\0\x13\0\0\0\
\x08\0\0\0\0\0\0\0\x18\0\0\0\0\0\0\0";

	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return -1;
}

#endif /* __TP_EXECVE_KERN_SKEL_H__ */
